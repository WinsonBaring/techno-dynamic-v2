@startuml
actor User

User -> NotificationView : Request to get all notifications
NotificationView -> NotificationController : get_all_notification(request)
NotificationController -> NotificationModel : Retrieve all notifications
NotificationModel --> NotificationController : Return notifications
NotificationController --> NotificationView : Return notifications
NotificationView --> User : Display notifications

User -> NotificationView : Request to get unread notifications count
NotificationView -> NotificationController : get_all_count_unread_notif(request)
NotificationController -> NotificationModel : Retrieve unread notifications count
NotificationModel --> NotificationController : Return unread count
NotificationController --> NotificationView : Return unread count
NotificationView --> User : Display unread count

User -> NotificationView : Mark all notifications as read
NotificationView -> NotificationController : mark_all_as_read(request)
NotificationController -> NotificationModel : Mark notifications as read
NotificationModel --> NotificationController : Confirmation of marking as read
NotificationController --> NotificationView : Confirmation of marking as read
NotificationView --> User : Display confirmation

User -> NotificationView : Create a new notification
NotificationView -> NotificationController : create(request)
NotificationController -> NotificationModel : Create new notification
NotificationModel --> NotificationController : Confirmation of creation
NotificationController --> NotificationView : Confirmation of creation
NotificationView --> User : Display confirmation

User -> NotificationView : Delete a notification
NotificationView -> NotificationController : deleteNotification(request)
NotificationController -> NotificationModel : Delete notification
NotificationModel --> NotificationController : Confirmation of deletion
NotificationController --> NotificationView : Confirmation of deletion
NotificationView --> User : Display confirmation
@enduml